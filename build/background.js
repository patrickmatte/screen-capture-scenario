!function(e){var t={};function o(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)o.d(r,i,function(t){return e[t]}.bind(null,i));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=6)}({6:function(e,t,o){e.exports=o(9)},9:function(e,t,o){"use strict";let r,i,n,a;function c(e){e.data&&e.data.size>0&&a.push(e.data)}function s(e=""){chrome.browserAction.setIcon({path:{16:chrome.extension.getURL("assets/images/get_started16"+e+".png"),32:chrome.extension.getURL("assets/images/get_started32"+e+".png"),48:chrome.extension.getURL("assets/images/get_started48"+e+".png"),128:chrome.extension.getURL("assets/images/get_started128"+e+".png")}})}function d(e){i=!0;let t={audio:!0,video:!0,audioConstraints:{mandatory:{chromeMediaSource:"tab"}},videoConstraints:{mandatory:{chromeMediaSource:"tab",minWidth:e.width,maxWidth:e.width,minHeight:e.height,maxHeight:e.height,minFrameRate:30,maxFrameRate:60}}};chrome.tabCapture.capture(t,u)}function u(e){e?r=e:alert("Stream creation failed: "+chrome.runtime.lastError.message),a=[],chrome.storage.local.get(["json"],p)}function p(e){let t="vp8",o="opus",i=8,a=128;if(e.json){let r=JSON.parse(e.json);r.settings&&(t=r.settings.videoCodec||t,o=r.settings.audioCodec||o,a=r.settings.audioBitsPerSecond||a,i=r.settings.videoBitsPerSecond||i)}let s={mimeType:"video/webm;codecs="+t+","+o};MediaRecorder.isTypeSupported(s.mimeType)||(s={mimeType:"video/webm;codecs=vp9"},MediaRecorder.isTypeSupported(s.mimeType)||(s={mimeType:"video/webm;codecs=vp8"},MediaRecorder.isTypeSupported(s.mimeType)||(s={mimeType:"video/webm"},MediaRecorder.isTypeSupported(s.mimeType)||(s={mimeType:""})))),s.audioBitsPerSecond=1e3*a,s.videoBitsPerSecond=1e6*i;try{n=new MediaRecorder(r,s)}catch(e){return console.error("Exception while creating MediaRecorder:",e),void console.log("Exception while creating MediaRecorder: "+JSON.stringify(e))}n.ondataavailable=c,n.start(10)}function l(){s(),n&&n.stop();let e=new Blob(a,{type:"video/webm"});if(window.videoURL=window.URL.createObjectURL(e),r){let e=r.getTracks();for(var t=0;t<e.length;++t)e[t].stop()}n=null,r=null,i=!1}o.r(t),chrome.runtime.onMessage.addListener((e,t,o)=>{switch(e.txt){case"scrollCaptureStartRecording":e.tabId,s("_red"),chrome.tabs.get(window.tabId,d);break;case"scrollCaptureStopRecording":l();break;case"scrollCaptureResizeWindow":!function(e,t){let o={width:e+window.chromeSize.width,height:t+window.chromeSize.height};chrome.windows.getCurrent({populate:!1},e=>{chrome.windows.update(e.id,o)})}(e.width,e.height);break;case"scrollCaptureTrackEvent":!function(e,t,o=""){let r=["_trackEvent",e,t];o&&r.push(o),window._gaq.push(r)}(e.category,e.action,e.label);break;case"scrollCaptureTrackPage":r=e.path,window._gaq.push(["_set","page",r]),window._gaq.push(["_trackPageview"])}var r}),function(e){window._gaq=window._gaq||[],window._gaq.push(["_setAccount",e]),window._gaq.push(["_trackPageview"]);let t=document.createElement("script");t.type="text/javascript",t.async=!0,t.src="https://ssl.google-analytics.com/ga.js";let o=document.getElementsByTagName("script")[0];o.parentNode.insertBefore(t,o)}("UA-161404627-1"),chrome.browserAction.onClicked.addListener(e=>{i&&l(),chrome.tabs.executeScript({file:"content.js"}),window.tabId=e.id,chrome.windows.getCurrent({populate:!1},t=>{window.chromeSize={width:t.width-e.width,height:t.height-e.height}})})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,